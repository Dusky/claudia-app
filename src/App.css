* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body, #root {
  height: 100vh;
  overflow: hidden;
  background: linear-gradient(160deg, #08080A 0%, #030305 100%);
  
  /* Attempt to disable default browser font smoothing for a more retro pixelated look */
  /* These are suggestions and browser support/effect varies */
  font-smooth: never;
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: grayscale;
  /* For true pixel fonts, this helps maintain crispness if not blurred by shader */
  /* image-rendering: pixelated; /* or crisp-edges - apply this on specific elements if needed */
}

/* ... rest of App.css ... */
.App {
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  position: relative;
  /* This background is for the content that gets captured by html2canvas for the shader */
  background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
  display: flex;
  flex-direction: column;
}

.App::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    var(--crt-gradient-background, none),
    radial-gradient(circle at 20% 50%, rgba(0, 255, 255, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 0, 255, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 40% 80%, rgba(0, 255, 0, 0.02) 0%, transparent 50%);
  animation: backgroundPulse 8s ease-in-out infinite;
  pointer-events: none;
  z-index: 1; 
}

.App::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.85' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.015'/%3E%3C/svg%3E");
  pointer-events: none;
  z-index: 0; 
  opacity: 0.6;
}

@keyframes backgroundPulse {
  0%, 100% { 
    opacity: 0.6;
    transform: scale(1);
  }
  50% { 
    opacity: 0.8;
    transform: scale(1.05);
  }
}

.main-content {
  flex: 1; 
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden; 
  min-height: 0; 
  z-index: 2; 
}

.terminal-container {
  flex: 1; 
  width: 100%;
  overflow-y: auto; 
  position: relative;
  backdrop-filter: blur(0.5px); 
  display: flex;
  flex-direction: column;
  min-height: 0; 
  /* Moved font-smoothing attempts to html, body, #root for global effect */
  /* image-rendering can be applied here if specific pixel fonts need it */
}

.terminal-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1; 
  opacity: 0.08;
  background-image: 
    linear-gradient(90deg, transparent 48%, rgba(0, 255, 255, 0.3) 49%, rgba(0, 255, 255, 0.3) 51%, transparent 52%),
    linear-gradient(90deg, transparent 78%, rgba(0, 255, 255, 0.2) 79%, rgba(0, 255, 255, 0.2) 81%, transparent 82%),
    linear-gradient(0deg, transparent 23%, rgba(0, 255, 255, 0.3) 24%, rgba(0, 255, 255, 0.3) 26%, transparent 27%),
    linear-gradient(0deg, transparent 67%, rgba(0, 255, 255, 0.2) 68%, rgba(0, 255, 255, 0.2) 70%, transparent 71%),
    radial-gradient(circle at 49% 24%, rgba(0, 255, 255, 0.4) 1px, transparent 1px),
    radial-gradient(circle at 79% 49%, rgba(0, 255, 255, 0.4) 1px, transparent 1px),
    radial-gradient(circle at 49% 68%, rgba(0, 255, 255, 0.4) 1px, transparent 1px),
    radial-gradient(circle at 81% 68%, rgba(0, 255, 255, 0.4) 1px, transparent 1px),
    radial-gradient(ellipse 8px 3px at 25% 35%, rgba(0, 255, 255, 0.3) 0%, transparent 100%),
    radial-gradient(ellipse 3px 8px at 75% 75%, rgba(0, 255, 255, 0.3) 0%, transparent 100%),
    linear-gradient(90deg, transparent 99%, rgba(0, 255, 255, 0.1) 100%),
    linear-gradient(0deg, transparent 99%, rgba(0, 255, 255, 0.1) 100%);
  
  background-size: 
    120px 40px, 80px 60px, 40px 120px, 60px 80px,
    120px 120px, 120px 120px, 120px 120px, 120px 120px,
    120px 120px, 120px 120px, 20px 20px, 20px 20px;
  
  background-position:
    0 0, 20px 0, 0 0, 0 20px,
    0 0, 0 0, 0 0, 0 0,
    0 0, 0 0, 0 0, 0 0;
  
  animation: circuitFlow 15s linear infinite;
}

@keyframes circuitFlow {
  0% { 
    background-position:
      0 0, 20px 0, 0 0, 0 20px,
      0 0, 0 0, 0 0, 0 0,
      0 0, 0 0, 0 0, 0 0;
  }
  100% { 
    background-position:
      120px 0, 140px 0, 0 120px, 0 140px,
      120px 120px, 120px 120px, 120px 120px, 120px 120px,
      120px 120px, 120px 120px, 20px 20px, 20px 20px;
  }
}

.terminal-container[data-theme="mainframe70s"] {
  background: 
    linear-gradient(180deg, rgba(0, 255, 0, 0.02) 0%, rgba(0, 0, 0, 0.9) 20%, rgba(0, 0, 0, 0.95) 80%, rgba(0, 255, 0, 0.02) 100%),
    radial-gradient(ellipse at center, rgba(0, 255, 0, 0.02) 0%, transparent 70%);
}

.terminal-container[data-theme="pc80s"] {
  background: 
    linear-gradient(180deg, rgba(0, 0, 255, 0.8) 0%, rgba(0, 0, 128, 0.9) 100%),
    repeating-linear-gradient(90deg, transparent, transparent 2px, rgba(255, 255, 255, 0.01) 2px, rgba(255, 255, 255, 0.01) 4px);
}

.terminal-container[data-theme="bbs90s"] {
  background: 
    linear-gradient(45deg, rgba(255, 0, 255, 0.03) 0%, rgba(0, 0, 0, 0.9) 25%, rgba(0, 0, 0, 0.95) 75%, rgba(0, 255, 255, 0.03) 100%),
    radial-gradient(circle at 30% 70%, rgba(255, 0, 255, 0.02) 0%, transparent 50%);
}

.terminal-container[data-theme="modern"] {
  background: 
    linear-gradient(180deg, rgba(26, 26, 26, 0.95) 0%, rgba(20, 20, 20, 0.98) 100%),
    linear-gradient(90deg, transparent 0%, rgba(0, 212, 170, 0.02) 50%, transparent 100%);
}

.claudia-avatar {
  z-index: 1000; 
  filter: drop-shadow(0 0 20px rgba(0, 255, 255, 0.3));
  transition: all 0.3s ease;
}

.claudia-avatar:hover {
  filter: drop-shadow(0 0 30px rgba(0, 255, 255, 0.5));
  transform: scale(1.02);
}

.terminal-container {
  scrollbar-width: thin;
}

.terminal-container::-webkit-scrollbar { width: 12px; }
.terminal-container::-webkit-scrollbar-track { background: rgba(0, 0, 0, 0.2); border-radius: 6px; }
.terminal-container::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, rgba(0, 255, 255, 0.3) 0%, rgba(0, 255, 255, 0.6) 50%, rgba(0, 255, 255, 0.3) 100%);
  border-radius: 6px; border: 2px solid transparent; background-clip: content-box;
}
.terminal-container::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(180deg, rgba(0, 255, 255, 0.5) 0%, rgba(0, 255, 255, 0.8) 50%, rgba(0, 255, 255, 0.5) 100%);
  background-clip: content-box;
}

::selection { background: rgba(0, 255, 255, 0.3); color: inherit; text-shadow: 0 0 8px currentColor; }
::-moz-selection { background: rgba(0, 255, 255, 0.3); color: inherit; text-shadow: 0 0 8px currentColor; }

.terminal-line { position: relative; margin-bottom: 8px; padding-bottom: 4px; min-height: 24px; }
.terminal-line[data-type="system"] { text-shadow: 0 0 10px currentColor; animation: systemGlow 2s ease-in-out infinite; }
@keyframes systemGlow {
  0%, 100% { text-shadow: 0 0 5px currentColor; opacity: 0.9; }
  50% { text-shadow: 0 0 15px currentColor, 0 0 25px currentColor; opacity: 1; }
}

.loading-dots span { display: inline-block; animation: loadingPulse 1.5s ease-in-out infinite; text-shadow: 0 0 10px currentColor; }
.loading-dots span:nth-child(2) { animation-delay: 0.2s; }
.loading-dots span:nth-child(3) { animation-delay: 0.4s; }
@keyframes loadingPulse {
  0%, 100% { opacity: 0.3; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.2); text-shadow: 0 0 15px currentColor; }
}

.terminal-input-line input { text-shadow: 0 0 5px currentColor; }
.terminal-input-line input:focus { text-shadow: 0 0 10px currentColor; }

@media (max-width: 768px) { 
  .claudia-avatar { transform: scale(0.8); }
  .terminal-container { font-size: 14px; }
}
@media (max-width: 480px) { 
  .claudia-avatar { transform: scale(0.65); }
  .terminal-container { font-size: 13px; padding: 10px; }
  .App::before { animation: backgroundPulse 12s ease-in-out infinite; }
  .terminal-line[data-type="system"] { animation: systemGlow 3s ease-in-out infinite; }
}
@media (max-width: 360px) { 
  .claudia-avatar { transform: scale(0.55); }
  .terminal-container { font-size: 12px; padding: 8px; }
  .App::after { opacity: 0.4; }
  .loading-dots span { animation-duration: 1.8s; }
}

.terminal-container[data-theme="mainframe70s"] .terminal-line { animation: scanlineGlow 0.1s linear infinite; }
@keyframes scanlineGlow {
  0%, 100% { background: transparent; }
  50% { background: rgba(0, 255, 0, 0.01); }
}
.terminal-container[data-theme="bbs90s"] .terminal-line { position: relative; }
.terminal-container[data-theme="bbs90s"] .terminal-line::before {
  content: ''; position: absolute; left: -10px; top: 0; bottom: 0; width: 2px;
  background: linear-gradient(180deg, transparent 0%, rgba(255, 0, 255, 0.5) 50%, transparent 100%);
  animation: bbsBorder 3s ease-in-out infinite;
}
@keyframes bbsBorder { 0%, 100% { opacity: 0; } 50% { opacity: 1; } }
